version: '3.8'
services:
  web:
    container_name: du_app
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn --config gunicorn-cfg.py core.wsgi
    expose:
      - 8000
    # volumes:
    #   - static_volume:/home/app/web/staticfiles
    restart: always
    env_file: .env
    depends_on:
      - db
    networks:
      - web_network
      - db_network
  db:
    container_name: du_postgres
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

      # copy the sql script to create tables
      # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      # POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DATABASE: "${DB_NAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASS}"
    networks:
      - db_network
  nginx:
    container_name: du_nginx
    build: ./nginx
    restart: always
    # image: "nginx:latest"
    ports:
      - "8000:80"
    # volumes:
    #   - ./nginx:/etc/nginx/conf.d
    #   - static_volume:/home/app/web/staticfiles
    depends_on: 
      - web
    networks:
      - web_network
volumes:
  postgres_data:
  static_volume:

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

 